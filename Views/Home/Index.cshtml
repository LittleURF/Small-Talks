@model PostsWithTags
@{
    ViewData["Title"] = "Home Page";
}
<!-- REPORT MODAL-->


<header class="home__header-main full-width row text-white">
    <div class="header__content d-flex justify-content-center align-items-start w-100 mb-5 mt-4">
        <div class="header__text">
            <h1 class="header__name display-1 text-white text-center">Small Talks</h1>
            <p style="font-size: 150%; font-family: 'Segoe UI', Tahoma;">A place to talk about anything and everything!</p>
            <br />
            <div class="d-flex justify-content-center w-100 mb-4">
                <a asp-controller="Instructions" asp-action="Index" class="btn btn-primary btn-lg">How does it work?</a>

            </div>
            <img class="header__logo" src="~/images/4.png" />
        </div>

    </div>
</header>
<br />
@if (TempData["TempMessage"] != null)
{
    <partial name="_TempMessagePartial" model="@TempData["TempMessage"]" />
}
<div class="row d-flex justify-content-center">
    <a asp-action="CreatePost" class="btn btn-success btn-lg">Create new post!</a>
</div>
<br />
<br />

<div class="tags-invisible-md d-flex justify-content-center">
    <a class="btn btn-dark btn-lg dropdown-toggle " style="width: 100px; " href="#tags-index" role="button" data-toggle="collapse" aria-expanded="false" aria-controls="tags-index">
        Tags
    </a>
</div>
<form asp-action="Index">
    <div class="row collapse dont-collapse-sm" id="tags-index">
        <div class="tags row m-auto  d-flex justify-content-between text-center" style="width: 90%;">
            @for (int i = 0; i < Model.Tags.Count(); i++)
            {
                <div class="tag col-lg-4 col-md-6">
                    <input asp-for="@Model.Tags[i].Id" type="hidden" class="form-check-input" />
                    <input asp-for="@Model.Tags[i].FaClasses" type="hidden" class="form-check-input" />
                    <input asp-for="@Model.Tags[i].Name" type="hidden" class="form-check-input" />
                    <input asp-for="@Model.Tags[i]" type="hidden" class="form-check-input" />

                    <input asp-for="@Model.Tags[i].IsActive" type="checkbox" class="form-check-input" />
                    <i class="tag__icon tag__icon-in-list @Model.Tags[i].FaClasses"></i>
                    <label class="form-check-label">@Model.Tags[i].Name</label>
                </div>
            }
        </div>

    </div>
    <div class="text-center">
        <input type="submit" class="tags__btn btn btn-secondary m-auto" value="Update" />
    </div>
</form>

<br />
<div class="row d-flex justify-content-center">
    <section class="posts w-100 mb-5">
        @{ foreach (var post in Model.Posts)
            {
                <partial name="_PostPartial" model="post" />
            }
        }
    </section>
</div>


<div class="d-flex justify-content-center">
    <span id="spinner" class="loading-gif" style="display:none;"><i class="fas fa-spinner fa-spin"></i></span>
</div>
@* This form's role is to pass the tags to the controller, so it can render the right posts. Its submitted on scroll by Jquery. *@
<form id="loadPostsButton" asp-action="GetTags" data-ajax="true" data-ajax-success="loadPosts" data-ajax-loading="#spinner"data-ajax-method="post">
    @for (int i = 0; i < Model.Tags.Count(); i++)
    {
        <input type="hidden" asp-for="Tags[i].Id" />
        <input type="hidden" asp-for="Tags[i].Name" />
        <input type="hidden" asp-for="Tags[i].IsActive" />
        <input type="hidden" asp-for="Tags[i].FaClasses" />
    }

</form>
@section Scripts {
    <script>
        loadPosts = function (tagsJson) {
            var div = $("<div></div>");

            var tags = tagsJson;
            var postsCount = $('.post').length;
            div.load("/Home/GetMorePostsPartial", { tags, postsCount });

            div.slideUp();

            $(".posts").append(div);
            div.slideDown(400);
        };

        5

        // if user is scrolled past a certain point, a function rendering posts is getting called, the delay is needed to avoid sending too many requests
        var recentScroll = false;
        $(window).on('scroll', function () {
            if ( !recentScroll && $(window).scrollTop() >= $(document).height() - $(window).height() - 50) {
                $('#loadPostsButton').trigger("submit");
                recentScroll = true;
                window.setTimeout(() => { recentScroll = false; }, 500)
            }
        });





        reportSent = function (reportedObject) {
            var modalId = `report-modal-${reportedObject.objectId}-${reportedObject.objectType}`;
            var modal = $(`#${modalId}`);

            modal.modal('hide');

        }
    </script>
}